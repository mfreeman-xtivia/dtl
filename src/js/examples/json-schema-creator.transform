{
    "out": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "$comment": "json-schema generated from json by DTL https://getdtl.org/",
        "properties": "(: { map($. 'create_properties' ) } :)"
    },
    "create_properties": "(: [ $index grep(^($. (^('typemap'))[typeof($item)])) ] :)",
    "create_string": "(: ^([$. derive($item 'format_lookup')] 'string_def') :)",
    "string_def": {
        "title": "(: $0.index -> field_title :)",
        "type": "string",
        "minLength": "(: ?(empty($1) 1 ) :)",
        "maxLength": "(: ?(empty($1) length($0.item)+100 ) :)",
        "format": "(: $1 :)"
    },
    "create_number": {
        "title": "(: $index -> field_title :)",
        "type": "(: ?((math.floor($item) == $item) 'integer' 'number' ) :)",
        "minimum": 0,
        "maximum": "(: math.floor(num($item * 100)) :)"
    },
    "create_boolean": {
        "title": "(: $index -> field_title :)",
        "type": "boolean"
    },
    "create_null": {
        "title": "(: $index -> field_title :)",
        "$comment": "field was null in sample data, guessing (possibly incorrectly) it should be string",
        "type": "string"
    },
    "create_array": {
        "title": "(: $index -> field_title :)",
        "type": "array",
        "minItems": 1,
        "maxItems": "(: num(length(fne($item 1))*20) :)",
        "items": "(: grep(^({ ['item' $item.0 ] } (^('typemap'))[typeof($item.0)])) :)"
    },
    "array_items": {
        "type": "(: ?((typeof($.) == 'undefined') 'string' typeof($.)) :)"
    },
    "create_object": {
        "title": "(: $index -> field_title :)",
        "type": "object",
        "properties": "(: { map($item 'create_properties') } :)"
    },
    "field_title": "(: capitalize(replace($. /_/g ' ')) :)",
    "typemap": {
        "array": "create_array",
        "object": "create_object",
        "number": "create_number",
        "string": "create_string",
        "boolean": "create_boolean",
        "undefined": "create_null"
    },
    "format_lookup": [
        [ "(: $. =~ /[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}/i :)", "(: 'uuid' :)" ], 
        [ "(: $. =~ /^[^@]+@.+\\..+/ :)", "(: 'email' :)" ],
        [ "(: $. =~ /^(http|https|ftp|mailto|tel):.*/ :)", "(: 'uri' :)" ],
        [ "(: $. =~ /^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]$/ :)", "(: 'date' :)" ],
        [ "(: $. =~ /^[0-9][0-9][0-9][0-9]-[0-9][0-9]-[0-9][0-9]T[0-9][0-9]:[0-9][0-9]:[0-9][0-9](\\+[0-9][0-9]:[0-9][0-9])?$/ :)", "(: 'date-time' :)" ],
        [ "(: $. =~ /^[0-9][0-9]:[0-9][0-9](:[0-9][0-9](\\+[0-9][0-9]:[0-9][0-9])?)?$/ :)", "(: 'time' :)" ],
        [ "(: $. =~ /^[12]?[0-9]?[0-9].[12]?[0-9]?[0-9].[12]?[0-9]?[0-9].[12]?[0-9]?[0-9]$/ :)", "(: 'ipv4' :)" ]
    ]
}
